/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NIIT.Admin;

import NIIT.stud.GroupButtonUtils;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.border.MatteBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AGARWAL-PC
 */
public class ViewAllQ extends javax.swing.JInternalFrame {

    /**
     * Creates new form ViewAllS
     */
  
    Connection con;
    Statement stmt;
    static final String JDBC_DRIVER ="com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost:3306/niitdb";
    DefaultTableModel model= new DefaultTableModel(new String[]{"Question","Course"},0);
    ButtonGroup group1 = new ButtonGroup();
    
    UpdateQues setLbl1;
    DelQues setLbl2;
    ViewQues setLbl3;
   int count=0;
    GroupButtonUtils corse = new GroupButtonUtils();
    protected Timer t;
    protected ActionListener al;
   
    public ViewAllQ() {
        initComponents();
        jLabel2.setVisible(false);
        label.setVisible(false);
        close.setVisible(true);
         al = new ActionListener(){
          
              public void actionPerformed(ActionEvent ae){
                  if(PBar.getValue()<100){
                       
                    PBar.setValue(PBar.getValue()+5);
                   }
                 else{t.stop();
                      jLabel2.setVisible(true);
                      head.setVisible(false);
                      PBar.setVisible(false);
                       Color color = UIManager.getColor("Table.gridColor");
                MatteBorder border = new MatteBorder(1, 1, 0, 0,Color.BLUE);
                 jTable1.setBorder(border);
                        jTable1.setModel(model);
                       if(count>0)
                  JOptionPane.showMessageDialog(null,"Successfully Fetched Data","Success",JOptionPane.INFORMATION_MESSAGE);    
                   else
                  JOptionPane.showMessageDialog(null,"No Data Found","Empty",JOptionPane.OK_CANCEL_OPTION);   
                     
                  }
              } 
         };
         t=new Timer(100,al);
         
    }    

    
      /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        close = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){

            public boolean isCellEditable(int row, int column){
                return false;}
        };
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        PBar = new javax.swing.JProgressBar();
        head = new javax.swing.JLabel();
        label = new javax.swing.JLabel();

        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/NIIT/Admin/NIIT.png"))); // NOI18N

        close.setText("close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        jTable1.setBorder(new javax.swing.border.MatteBorder(null));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Question", "Course"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(153, 153, 255));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel2.setText("Question Database");

        PBar.setBackground(new java.awt.Color(0, 0, 0));
        PBar.setForeground(new java.awt.Color(255, 255, 255));
        PBar.setOpaque(true);
        PBar.setStringPainted(true);

        head.setFont(new java.awt.Font("Swis721 Hv BT", 0, 11)); // NOI18N
        head.setText("Please Wait Fetching Data from DataBase ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PBar, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(277, 277, 277)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(254, 254, 254)
                                .addComponent(head, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 85, Short.MAX_VALUE)))
                .addContainerGap(180, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(PBar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(head)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabel1))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
  this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_closeActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        String tmp=String.valueOf(model.getValueAt(jTable1.getSelectedRow(),0));
        String tmp2=String.valueOf(model.getValueAt(jTable1.getSelectedRow(),1));
          if(label.getText()=="1")
          {
             UpdateQues u = new UpdateQues();
             setLbl1=u;
            this.getParent().add(u);
             setLbl1.setLabel(tmp,tmp2);
             setLbl1.c_type.setText(tmp2);
           u.setVisible(true);   
        try {
            u.setMaximum(true);
            u.setSelected(true);

        } catch (PropertyVetoException ex) {
            Logger.getLogger(s_info.class.getName()).log(Level.SEVERE, null, ex);
       }  
    }
          if(label.getText()=="2")
          {
             DelQues d = new DelQues();
             setLbl2=d;
            this.getParent().add(d);
             setLbl2.setLabel(tmp,tmp2);
             setLbl2.c_type.setText(tmp2);
           d.setVisible(true);   
        try {
            d.setMaximum(true);
            d.setSelected(true);

        } catch (PropertyVetoException ex) {
            Logger.getLogger(s_info.class.getName()).log(Level.SEVERE, null, ex);
       }  
    }    
          if(label.getText()=="3")
          {
             ViewQues a = new ViewQues();
             setLbl3=a;
            this.getParent().add(a);
             setLbl3.setLabel(tmp,tmp2);
             setLbl3.c_type.setText(tmp2);
           a.setVisible(true);   
        try {
            a.setMaximum(true);
            a.setSelected(true);

        } catch (PropertyVetoException ex) {
            Logger.getLogger(s_info.class.getName()).log(Level.SEVERE, null, ex);
       }  
    }    
    }//GEN-LAST:event_jTable1MouseClicked
  void setLabel(String s1) {
       String s2=s1;
      JOptionPane.showMessageDialog(this,"You Choose Questions of '"+s1+"' Course(s)","Success",JOptionPane.INFORMATION_MESSAGE);   
  try {
            Class.forName("com.mysql.jdbc.Driver");  
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewAllQ.class.getName()).log(Level.SEVERE, null, ex);
        }
    try { 
        con=(Connection) DriverManager.getConnection(DB_URL,"root","");
    } catch (SQLException ex) {
        Logger.getLogger(ViewAllQ.class.getName()).log(Level.SEVERE, null, ex);
    }
    try {
        stmt=(Statement) con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);        // TODO add your handling code here:
    } catch (SQLException ex) {
        Logger.getLogger(ViewAllQ.class.getName()).log(Level.SEVERE, null, ex);
    }
     if("c".equalsIgnoreCase(s1)){
                 s2=s2+"lang";
             }
 String sql = "Select * from "+s2;
  String sql1 = "Select * from java UNION Select * from cpp UNION Select * from clang";
ResultSet rs = null;
        try { if("All".equalsIgnoreCase(s1)){
             rs = stmt.executeQuery(sql1);
        }
            else {
               rs = stmt.executeQuery(sql);
           }
           
        } catch (SQLException ex) {
            Logger.getLogger(ViewAllQ.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while(rs.next()){
                count++;
            }
            rs.beforeFirst();
              String e;
             while (rs.next())
            {
                String d = rs.getString("ques");
                 if("All".equalsIgnoreCase(s1)){
                    if("clang".equalsIgnoreCase(rs.getString("course"))){
                      e="C";
                    }
                    else {
                         e = rs.getString("course");
                    }
                 }
                 else{
                      e=s1;
                 }
                 
               
                model.addRow(new Object[]{d,e});
            }       } catch (SQLException ex) {       
            Logger.getLogger(ViewAllQ.class.getName()).log(Level.SEVERE, null, ex);
        }
   close.setEnabled(true);
      }
          

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JProgressBar PBar;
    protected javax.swing.JButton close;
    protected javax.swing.JLabel head;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    protected javax.swing.JTable jTable1;
    protected javax.swing.JLabel label;
    // End of variables declaration//GEN-END:variables

    private static class ActionListner {

        public ActionListner() {
        }
    }
}
