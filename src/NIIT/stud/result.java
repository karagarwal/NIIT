/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NIIT.stud;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.TabSettings;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER;
import static javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS;
import static javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER;
/**
 *
 * @author Dev
 */
public final class result extends javax.swing.JInternalFrame {
    String RBans, SQL, course;
    int count=0, category[], totalCateg[], totalResult=0, courseCount=0, numOfCounts = 0;
    Boolean[] attempt;
    showQues ShowQuesObj;
    
    Connection con;
    Statement stmt;
    ResultSet rs;
    
    JLabel[] Cname ,Cscore;
    
    
    Main chkFrame;
    
    public result(String s,Boolean[] attempted, int total, int correct, int incorrect, showQues prev, int category[], int[] totalCateg, Main chkFrame, String course, int cntr) {
        initComponents();
        this.course = course;
        this.category = category;
        this.count = Integer.parseInt(s);
        this.attempt = attempted;
        this.totalCateg = totalCateg;
        ShowQuesObj = prev;
        this.chkFrame = chkFrame;
        courseCount = cntr;
        initializeConceptLabels();
        chkFrame.frameclosed("test");
        
        this.numQ.setText(s);
        this.correctjLabel5.setText(Integer.toString(correct));
        this.incorrectQues.setText(Integer.toString(incorrect));
        attemptedjLabel.setText(Integer.toString(total));
        AVGjLabel.setText(Float.toString(Math.round((correct/Float.parseFloat(s))*100)/1.00f) + " %");
        username.setText(ShowQuesObj.studName);
        userid.setText(ShowQuesObj.studID);
        
        setPerformancePanel();
        storeResult();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        idPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        userid = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        timejLabel2 = new javax.swing.JLabel();
        datejLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        stats = new javax.swing.JPanel();
        numQ = new javax.swing.JLabel();
        attemptedjLabel = new javax.swing.JLabel();
        incorrectQues = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        correctjLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        incorrectjLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        scorePanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        conceptPane = new javax.swing.JScrollPane();
        performancePanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        AVGjLabel = new javax.swing.JLabel();
        footerPanel = new javax.swing.JPanel();
        SaveResult = new javax.swing.JButton();
        close = new javax.swing.JButton();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setTitle("Result");
        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setAutoscrolls(true);
        setName("Result1"); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);

        headPanel.setPreferredSize(new java.awt.Dimension(870, 52));

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel15.setText("Score Card");

        jLabel16.setBackground(new java.awt.Color(0, 153, 204));
        jLabel16.setForeground(new java.awt.Color(102, 204, 0));
        jLabel16.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel16.setOpaque(true);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NIIT/stud/icon/test-512 small.png"))); // NOI18N

        javax.swing.GroupLayout headPanelLayout = new javax.swing.GroupLayout(headPanel);
        headPanel.setLayout(headPanelLayout);
        headPanelLayout.setHorizontalGroup(
            headPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headPanelLayout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(headPanelLayout.createSequentialGroup()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        headPanelLayout.setVerticalGroup(
            headPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headPanelLayout.createSequentialGroup()
                .addGroup(headPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        idPanel.setBackground(new java.awt.Color(153, 255, 0));
        idPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        idPanel.setMaximumSize(new java.awt.Dimension(865, 75));
        idPanel.setPreferredSize(new java.awt.Dimension(870, 99));

        jLabel8.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        jLabel8.setText("Student Name :");

        username.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        jLabel9.setText("Student ID   :");

        userid.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel23.setText("Date:");

        timejLabel2.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        timejLabel2.setVerifyInputWhenFocusTarget(false);

        datejLabel.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        datejLabel.setVerifyInputWhenFocusTarget(false);

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel6.setText("Time:");

        javax.swing.GroupLayout idPanelLayout = new javax.swing.GroupLayout(idPanel);
        idPanel.setLayout(idPanelLayout);
        idPanelLayout.setHorizontalGroup(
            idPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(idPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(idPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(idPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userid, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(233, 233, 233)
                .addGroup(idPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(idPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(29, 29, 29)
                        .addComponent(timejLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(idPanelLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(datejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        idPanelLayout.setVerticalGroup(
            idPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, idPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(idPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(idPanelLayout.createSequentialGroup()
                        .addGroup(idPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(idPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timejLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(idPanelLayout.createSequentialGroup()
                        .addGroup(idPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(idPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userid, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );

        stats.setBackground(new java.awt.Color(0, 153, 204));
        stats.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        stats.setPreferredSize(new java.awt.Dimension(870, 109));

        numQ.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        attemptedjLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        incorrectQues.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setText("Total number of questions");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setText("Questions attempted");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setText("Correct questions");

        correctjLabel5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setText("Incorrect questions");

        incorrectjLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NIIT/stud/icon/falseicon.png"))); // NOI18N

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NIIT/stud/icon/trueicon.png"))); // NOI18N

        javax.swing.GroupLayout statsLayout = new javax.swing.GroupLayout(stats);
        stats.setLayout(statsLayout);
        statsLayout.setHorizontalGroup(
            statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(statsLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(attemptedjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(statsLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(numQ, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(242, 242, 242)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(statsLayout.createSequentialGroup()
                        .addComponent(incorrectQues, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(incorrectjLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(statsLayout.createSequentialGroup()
                        .addComponent(correctjLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        statsLayout.setVerticalGroup(
            statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(statsLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(statsLayout.createSequentialGroup()
                        .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(numQ, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(correctjLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(attemptedjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(incorrectQues, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(incorrectjLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );

        scorePanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        scorePanel.setPreferredSize(new java.awt.Dimension(870, 265));

        jLabel20.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel20.setText("CONCEPT TESTED");

        jLabel21.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel21.setText("Percentage Score");

        conceptPane.setBorder(null);
        conceptPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        performancePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        performancePanel.setPreferredSize(new java.awt.Dimension(865, 182));

        javax.swing.GroupLayout performancePanelLayout = new javax.swing.GroupLayout(performancePanel);
        performancePanel.setLayout(performancePanelLayout);
        performancePanelLayout.setHorizontalGroup(
            performancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 861, Short.MAX_VALUE)
        );
        performancePanelLayout.setVerticalGroup(
            performancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        conceptPane.setViewportView(performancePanel);

        jLabel22.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel22.setText("Overall : ");

        AVGjLabel.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N

        javax.swing.GroupLayout scorePanelLayout = new javax.swing.GroupLayout(scorePanel);
        scorePanel.setLayout(scorePanelLayout);
        scorePanelLayout.setHorizontalGroup(
            scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scorePanelLayout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(jLabel20)
                .addGap(384, 384, 384)
                .addComponent(jLabel21)
                .addContainerGap(80, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scorePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AVGjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(scorePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(conceptPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        scorePanelLayout.setVerticalGroup(
            scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scorePanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(conceptPane, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AVGjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        SaveResult.setText("Save Result");
        SaveResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveResultActionPerformed(evt);
            }
        });

        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        close.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                closeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout footerPanelLayout = new javax.swing.GroupLayout(footerPanel);
        footerPanel.setLayout(footerPanelLayout);
        footerPanelLayout.setHorizontalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerPanelLayout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(SaveResult, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(290, 290, 290))
        );
        footerPanelLayout.setVerticalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveResult, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(footerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scorePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
                    .addComponent(stats, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
                    .addComponent(idPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
                    .addComponent(headPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(headPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(idPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(scorePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(footerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(373, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void initializeConceptLabels(){
        for(int x=0; x<courseCount; x++)
            if(totalCateg[x] != 0)
                numOfCounts++;
        Cname  = new JLabel[numOfCounts];
        Cscore = new JLabel[numOfCounts];
    }
    
    private void getSystemDate(){
        DateFormat dt, time;
        dt = new SimpleDateFormat("E dd/mm/yy");
        time = new SimpleDateFormat("hh:mm:a");
        Date dateObj = new Date();
        
        datejLabel.setText(dt.format(dateObj));
        timejLabel2.setText(time.format(dateObj));
    }
    
    private void storeResult(){
        int resultCount = 0, i, j; 
        DateFormat dt, time;
        dt = new SimpleDateFormat("E dd/mm/yy");
        time = new SimpleDateFormat("hh:mm:a");
        Date dateObj = new Date();
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/niitdb","root","");
            
            SQL = "Select * from `result " +course+ "` WHERE id = '" + ShowQuesObj.studID + "'";
            stmt = con.createStatement();         //  ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery(SQL);
            
            while(rs.next())
                resultCount++;
            
            if(resultCount>4){
                rs.first();
                
                String deleteScore = "";
                
                for(i = 0; i<courseCount; i++){
                    deleteScore += "scoreC" + (i+1) + " = '" +rs.getString("ScoreC" + (i+1))+ "' and ";
                }        

                SQL = "DELETE FROM `result " +course+ "` where id = '" +rs.getString("id")+ "' and "
                                                   + "date = '" +rs.getString("date")+ "' and "
                                                   + "time = '" +rs.getString("time")+ "' and "
                                                   + deleteScore
                                                   + "totalScore = '" +rs.getString("totalScore")+ "' and "
                                                   + "totalQuestions = '" +rs.getString("totalQuestions")+ "' and "
                                                   + "attemptedQues = '" +rs.getString("attemptedQues")+ "' and "
                                                   + "incorrectQues = '" +rs.getString("incorrectQues")+ "' and "
                                                   + "correctQues = '" +rs.getString("correctQues")+ "'";
                stmt = con.createStatement();
                stmt.executeUpdate(SQL);
            }
            
            String insertScore = "", scoreName = "";
            
            for(i = 0, j = 0; i<courseCount; i++){
                scoreName += "`scoreC" + (i+1) + "`, ";
                if(totalCateg[i] != 0 ){
                        insertScore += "'" + Cscore[j].getText() + "', ";
                        j++;
                    }
                    else
                        insertScore += "'0',";
            }

            SQL = "INSERT INTO `result "+course
                    + "` (`id`, `date`, `time`, "
                    + scoreName
                    + "`totalScore`, `totalQuestions`, `attemptedQues`, `incorrectQues`, `correctQues`) "
                    + "VALUES ('" +ShowQuesObj.studID+ "','" +dt.format(dateObj)+ "','" +time.format(dateObj)+ "',"
                    + insertScore 
                    + "'" +AVGjLabel.getText()+ "','" +numQ.getText()+ "','" +attemptedjLabel.getText()+ "','" +incorrectQues.getText()+ "','" +correctjLabel5.getText()+ "')";

                    
            stmt = con.createStatement();
            rs.last();
            stmt.executeUpdate(SQL);

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Submit.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void setPerformancePanel(){
         getSystemDate();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/niitdb","root","");
            
            int locx = 50, locy = 0, pos, height = 0;    //height is sum of upper space (50 + 6) and lowe space (36)
            int cnt = 0;
            
            for(pos=0; pos<courseCount; pos++){
                if(totalCateg[pos] != 0 ){
                    SQL = "SELECT * FROM `concepts " +course+ "` where `concept id` = " + (pos+1);
                    Statement stmt = con.createStatement();
                    rs = stmt.executeQuery(SQL);
                    rs.next();
                    Cname[cnt] = new JLabel(rs.getString("concept name"));
                    Cscore[cnt] = new JLabel(Float.toString(Math.round((category[cnt]/(float)totalCateg[cnt])*100)/1.00f) + " %");

                    performancePanel.add(Cname[cnt]);
                    performancePanel.add(Cscore[cnt]);
                    Cname[cnt].setSize(600,20);
                    Cscore[cnt].setSize(50,20);
                    Cname[cnt].setBorder(null);
                    Cscore[cnt].setBorder(null);
                    Cname[cnt].setLocation(locx, locy);
                    Cscore[cnt].setLocation(locx + 650, locy);

                    locy += 26;
                    cnt++;
                }
            }
            
            if((numOfCounts*26>255)){
                height = numOfCounts*26;
                Dimension scoreSize = new Dimension(870,255 + 110);   // 260 for 10 labels on the screen
                Dimension panelSize = new Dimension(845,height);
                Dimension scrollSize = new Dimension(865,255);
                scorePanel.setPreferredSize(scoreSize);
                scorePanel.setMinimumSize(scoreSize);
                performancePanel.setPreferredSize(panelSize);
                performancePanel.setMinimumSize(panelSize);
                conceptPane.setPreferredSize(scrollSize);
                conceptPane.setMinimumSize(scrollSize);
                conceptPane.setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_ALWAYS);
            }
            else{
                height = 26*numOfCounts;
                Dimension scoreSize = new Dimension(870,(height + 83));
                Dimension panelSize = new Dimension(845,(height));
                Dimension scrollSize = new Dimension(865,height);
                scorePanel.setPreferredSize(scoreSize);
                scorePanel.setMinimumSize(scoreSize);
                performancePanel.setPreferredSize(panelSize);
                performancePanel.setMinimumSize(panelSize);
                conceptPane.setPreferredSize(scrollSize);
                conceptPane.setMinimumSize(scrollSize);
                conceptPane.setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_NEVER);
                conceptPane.setHorizontalScrollBarPolicy(HORIZONTAL_SCROLLBAR_NEVER);
            }

            performancePanel.repaint();
            conceptPane.repaint();
            scorePanel.repaint();
        } catch (SQLException ex) {
            Logger.getLogger(showQues.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(result.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        ShowQuesObj.dispose();
        this.dispose();
    }//GEN-LAST:event_closeActionPerformed

    private void closeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_closeKeyPressed
        if((evt.getKeyCode() == KeyEvent.VK_ENTER) || (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) || (evt.getKeyCode() == KeyEvent.VK_ESCAPE))
           close.doClick();
    }//GEN-LAST:event_closeKeyPressed

    private void SaveResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveResultActionPerformed
        Document doc = new Document(PageSize.A4);
        String machine_name;
        doc.addAuthor("NIIT");
        doc.addTitle("Student Score Card");
        Paragraph p = new Paragraph();
        Paragraph p1 = new Paragraph();
        Paragraph p2 = new Paragraph();
        Paragraph p3 = new Paragraph();
        
        
        String fnm = userid.getText();
        Font bold = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
        try{
            int conceptRec = (numOfCounts*15 + 120), fileCount = 1;
            File scoreCard;
            String FileName;
            
            while(true){
                FileName= course+" result id "+ fnm + "_" +fileCount+ ".pdf";
                 String path = System.getProperty("user.home")+"\\Desktop\\"+FileName;
                scoreCard = new File(path);
                if(scoreCard.exists())
                    fileCount++;
                else
                    break;
            }
            
            PdfWriter pdf = PdfWriter.getInstance(doc, new FileOutputStream(scoreCard));
            doc.open();
            PdfContentByte canvas = pdf.getDirectContentUnder();
            Rectangle rect = new Rectangle(20,695,575,765);    //X,Y,WIDHT,HEIGHT
            Rectangle rect1 = new Rectangle(20,615,575,685);
            Rectangle rect2 = new Rectangle(20,(854-(conceptRec+235)),575,605);   //235 is the height used in the upperportion s

           BaseColor bColor = new BaseColor(0x99, 0xff, 0x00);
            rect.setBackgroundColor(bColor);
            rect.setBorder(Rectangle.BOX);
            rect.setBorderWidth(1);
            canvas.rectangle(rect);
            
            BaseColor bColor1 = new BaseColor(0x00, 0x99, 0xCC);
            rect1.setBackgroundColor(bColor1);
            rect1.setBorder(Rectangle.BOX);
            rect1.setBorderWidth(1);
            canvas.rectangle(rect1);
            
            BaseColor bColor2 = new BaseColor(0xff, 0xff, 0xbd);
            rect2.setBackgroundColor(bColor2);
            rect2.setBorder(Rectangle.BOX);
            rect2.setBorderWidth(1);
            canvas.rectangle(rect2);

            Image image1 = Image.getInstance(System.getProperty("user.home")+"\\Documents\\NetBeansProjects\\Niit\\src\\NIIT\\stud\\icon\\NIIT.png");
           image1.setAbsolutePosition(16,790);
          image1.scalePercent(12,12);
        doc.add(image1);
        
        Image image2 = Image.getInstance(System.getProperty("user.home")+"\\Documents\\NetBeansProjects\\Niit\\src\\NIIT\\stud\\icon\\test-512 small.png");
           image2.setAbsolutePosition(180,770);
          image2.scalePercent(70,70);
          doc.add(image2);


            Phrase head = new Phrase("\n STUDENT RESULT ",bold);
            p.setAlignment(Element.ALIGN_CENTER);
            p.add(head);
            doc.add(p);
            
            p1.setTabSettings(new TabSettings(300f));
            p1.add("\nName   : " + username.getText());
            p1.add(Chunk.TABBING);
            p1.add("Date        : " + datejLabel.getText());
            p1.add("\n\n Student ID     : " + userid.getText());
            p1.add(Chunk.TABBING);
            p1.add("Time        : " + timejLabel2.getText());        
            doc.add(p1);

            p2.setTabSettings(new TabSettings(300f));
            p2.add("\n\n Total number of questions : " + numQ.getText());
            p2.add(Chunk.TABBING);
            p2.add("Correct questions        : " + correctjLabel5.getText());
            p2.add("\n\n Questions attempted       : " + attemptedjLabel.getText());
            p2.add(Chunk.TABBING);
            p2.add("Incorrect questions      : " + incorrectjLabel6.getText());
            doc.add(p2);
            
            p3.add("\n\n                         CONCEPT TESTED");
            p3.setTabSettings(new TabSettings(300f));
            p3.add(Chunk.TABBING);
            p3.add("           PERCENTAGE\n\n");
            for(int i=0; i<numOfCounts; i++){
                p3.add("                " +Cname[i].getText());
                p3.add(Chunk.TABBING);
                p3.add("                   " +Cscore[i].getText()+ "\n");
            }
            p3.add("\n");
            p3.add(Chunk.TABBING);
            p3.add("OVERALL : " + AVGjLabel.getText());
            doc.add(p3);

            JOptionPane.showInternalMessageDialog(this.getParent()," '"+FileName+"' "+" Successfully Saved to Desktop","Success",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(DocumentException | IOException e){
            JOptionPane.showInternalMessageDialog(this.getParent(),e.getMessage());
        } doc.close();

    }//GEN-LAST:event_SaveResultActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AVGjLabel;
    private javax.swing.JButton SaveResult;
    private javax.swing.JLabel attemptedjLabel;
    private javax.swing.JButton close;
    private javax.swing.JScrollPane conceptPane;
    private javax.swing.JLabel correctjLabel5;
    private javax.swing.JLabel datejLabel;
    private javax.swing.JPanel footerPanel;
    private javax.swing.JPanel headPanel;
    private javax.swing.JPanel idPanel;
    private javax.swing.JLabel incorrectQues;
    private javax.swing.JLabel incorrectjLabel6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel numQ;
    private javax.swing.JPanel performancePanel;
    private javax.swing.JPanel scorePanel;
    private javax.swing.JPanel stats;
    private javax.swing.JLabel timejLabel2;
    private javax.swing.JLabel userid;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}
