/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NIIT.stud;

import com.itextpdf.text.*;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.TabSettings;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;

import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER;
import static javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS;
import static javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER;

/**
 *
 * @author Dev
 */
public class score extends javax.swing.JInternalFrame {
    String SQL, SQL1, SQL2, studID, course, scoreName[];
    Connection con;
    Statement stmt, stmt1, stmt2;
    ResultSet rs, rs1, rs2;
    int totalResult=0, conceptCount = 0, labelCount = 0;
    
    JLabel[] Cname, Cscore;
    /**
     * Creates new form score
     */
    public score(Main id) {
        initComponents();
        this.studID = id.studID;
        details.setVisible(false);
        stats.setVisible(false);
        scorePanel.setVisible(false);
        old.setVisible(false);
        next.setVisible(false);
        SaveResult.setVisible(false);
        title.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        details = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        studNamejLabel = new javax.swing.JLabel();
        studIdjLabel = new javax.swing.JLabel();
        DOBjLabel = new javax.swing.JLabel();
        coursejLabel = new javax.swing.JLabel();
        datejLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        timejLabel = new javax.swing.JLabel();
        stats = new javax.swing.JPanel();
        numQ = new javax.swing.JLabel();
        attemptedjLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        correctjLabel = new javax.swing.JLabel();
        incorrectjLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        selectionPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        courseComboBox = new javax.swing.JComboBox<>();
        title = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        footerPanel = new javax.swing.JPanel();
        old = new javax.swing.JButton();
        next = new javax.swing.JButton();
        SaveResult = new javax.swing.JButton();
        scorePanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        conceptPane = new javax.swing.JScrollPane();
        performancePanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        AVGjLabel = new javax.swing.JLabel();

        details.setBackground(new java.awt.Color(153, 255, 0));
        details.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel7.setText("Name: ");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel8.setText("Student ID:");

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel9.setText("D.O.B.");

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel10.setText("Course:");

        jLabel22.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel22.setText("Date:");

        studNamejLabel.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        studIdjLabel.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        DOBjLabel.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        coursejLabel.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        datejLabel.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        datejLabel.setVerifyInputWhenFocusTarget(false);

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel6.setText("Time:");

        timejLabel.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        timejLabel.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout detailsLayout = new javax.swing.GroupLayout(details);
        details.setLayout(detailsLayout);
        detailsLayout.setHorizontalGroup(
            detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(30, 30, 30)
                .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studNamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DOBjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studIdjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(260, 260, 260)
                .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel22)
                    .addComponent(jLabel6))
                .addGap(20, 20, 20)
                .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coursejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        detailsLayout.setVerticalGroup(
            detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsLayout.createSequentialGroup()
                .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(detailsLayout.createSequentialGroup()
                                .addComponent(datejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(15, 15, 15)
                                .addComponent(timejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(detailsLayout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15)
                        .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coursejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(detailsLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(DOBjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, detailsLayout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(studNamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(15, 15, 15)
                            .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(studIdjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(15, 15, 15)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );

        stats.setBackground(new java.awt.Color(0, 153, 204));
        stats.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        numQ.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        attemptedjLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setText("Total number of questions");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setText("Questions attempted");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setText("Correct questions");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel5.setText("Incorrect questions");

        correctjLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        incorrectjLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NIIT/stud/icon/trueicon.png"))); // NOI18N

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NIIT/stud/icon/falseicon.png"))); // NOI18N

        javax.swing.GroupLayout statsLayout = new javax.swing.GroupLayout(stats);
        stats.setLayout(statsLayout);
        statsLayout.setHorizontalGroup(
            statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(statsLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(attemptedjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(statsLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(numQ, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(272, 272, 272)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(statsLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(incorrectjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(statsLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(correctjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        statsLayout.setVerticalGroup(
            statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(statsLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(statsLayout.createSequentialGroup()
                        .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(numQ, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(correctjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(attemptedjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(incorrectjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15))
        );

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        jLabel1.setText("Select a Course to view your lastest Score");

        courseComboBox.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        courseComboBox.setMaximumRowCount(4);
        courseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "JAVA", "C++", "C", "PHP", "ASP .NET" }));
        courseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selectionPanelLayout = new javax.swing.GroupLayout(selectionPanel);
        selectionPanel.setLayout(selectionPanelLayout);
        selectionPanelLayout.setHorizontalGroup(
            selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectionPanelLayout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(242, 242, 242))
        );
        selectionPanelLayout.setVerticalGroup(
            selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel12.setText("Score Card");

        jLabel11.setBackground(new java.awt.Color(0, 153, 204));
        jLabel11.setForeground(new java.awt.Color(102, 204, 0));
        jLabel11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel11.setOpaque(true);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NIIT/stud/icon/test-512 small.png"))); // NOI18N

        javax.swing.GroupLayout titleLayout = new javax.swing.GroupLayout(title);
        title.setLayout(titleLayout);
        titleLayout.setHorizontalGroup(
            titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleLayout.createSequentialGroup()
                .addGap(306, 306, 306)
                .addComponent(jLabel15)
                .addGap(22, 22, 22)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(titleLayout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        titleLayout.setVerticalGroup(
            titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleLayout.createSequentialGroup()
                .addGroup(titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        old.setText("Previous");
        old.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldActionPerformed(evt);
            }
        });
        old.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                oldKeyPressed(evt);
            }
        });

        next.setText("Next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });
        next.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nextKeyPressed(evt);
            }
        });

        SaveResult.setText("Save Result");
        SaveResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveResultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout footerPanelLayout = new javax.swing.GroupLayout(footerPanel);
        footerPanel.setLayout(footerPanelLayout);
        footerPanelLayout.setHorizontalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(SaveResult, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(old, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        footerPanelLayout.setVerticalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerPanelLayout.createSequentialGroup()
                .addGroup(footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(old, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveResult, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        scorePanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        scorePanel.setPreferredSize(new java.awt.Dimension(870, 265));

        jLabel20.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel20.setText("CONCEPT TESTED");

        jLabel21.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel21.setText("Percentage Score");

        conceptPane.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        conceptPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        performancePanel.setPreferredSize(new java.awt.Dimension(865, 182));

        javax.swing.GroupLayout performancePanelLayout = new javax.swing.GroupLayout(performancePanel);
        performancePanel.setLayout(performancePanelLayout);
        performancePanelLayout.setHorizontalGroup(
            performancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 865, Short.MAX_VALUE)
        );
        performancePanelLayout.setVerticalGroup(
            performancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        conceptPane.setViewportView(performancePanel);

        jLabel23.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel23.setText("Overall : ");

        AVGjLabel.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N

        javax.swing.GroupLayout scorePanelLayout = new javax.swing.GroupLayout(scorePanel);
        scorePanel.setLayout(scorePanelLayout);
        scorePanelLayout.setHorizontalGroup(
            scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scorePanelLayout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(jLabel20)
                .addGap(384, 384, 384)
                .addComponent(jLabel21)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scorePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AVGjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(scorePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(conceptPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        scorePanelLayout.setVerticalGroup(
            scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scorePanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(conceptPane, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AVGjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(selectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(details, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(footerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scorePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE))
                .addGap(0, 83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(selectionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(details, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(stats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(scorePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(footerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void get_total_concepts() {
    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/niitdb","root","");

        SQL = "SELECT * FROM `concepts " +course;

        Statement stmt = con.createStatement();
        rs = stmt.executeQuery(SQL);
        conceptCount = 0;
        while(rs.next())
            conceptCount++;
    } catch (ClassNotFoundException | SQLException ex) {
        Logger.getLogger(Submit.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    
    void getStudResult(String sid){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/niitdb","root","");
            
            SQL = "SELECT * FROM `result " +course+ "` WHERE id = '"+sid+"'";
             
            stmt = con.createStatement();
            rs = stmt.executeQuery(SQL);
            
            if(rs.next()){
                SQL1 = "SELECT * FROM student_info WHERE id = '" +sid+ "'";
            
                stmt1 = con.createStatement();
                rs1 = stmt1.executeQuery(SQL1);
                rs1.next();
                studNamejLabel.setText(rs1.getString("name"));
                studIdjLabel.setText(rs1.getString("id"));
                DOBjLabel.setText(rs1.getString("dob"));
                
                rs.last();
                performancePanel.removeAll();
                setAllLabels(rs);

                details.setVisible(true);
                stats.setVisible(true);
                scorePanel.setVisible(true);
                title.setVisible(true);
                old.setEnabled(true);
                old.setVisible(true);
                SaveResult.setVisible(true);
                next.setVisible(true);
                next.setEnabled(false);
            }
            else{
                details.setVisible(false);
                stats.setVisible(false);
                scorePanel.setVisible(false);
                title.setVisible(false);
                old.setVisible(false);
                next.setVisible(false);
                SaveResult.setVisible(false);

                JOptionPane.showInternalMessageDialog(this,
                        "OOPS!! you dont have any records for this Course", 
                        "No Record Found",
                        JOptionPane.ERROR_MESSAGE);
                courseComboBox.insertItemAt("", 0);
                courseComboBox.setSelectedItem("");
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(score.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }

    private void setAllLabels(ResultSet rset) throws SQLException{
        scoreName = new String[conceptCount];
        labelCount = 0;

        int cnt = 0, locx = 50, locy = 0, pos, height = 0;    //height is sum of upper space (50 + 6) and lowe space (36)
        for(int i = 0 ; i<conceptCount; i++){
                scoreName[i]= "scoreC" + (i+1);
        }

        for(int p=0; p<conceptCount; p++){
            if(!(rset.getString(scoreName[p]).equalsIgnoreCase("0")))
                labelCount++;
        }
        
        Cname = new JLabel[labelCount];
        Cscore = new JLabel[labelCount];
        
        for(int p=0; p<conceptCount; p++){
            if(!rset.getString(scoreName[p]).equalsIgnoreCase("0")){
                SQL2 = "SELECT *  FROM `concepts " +course+ "` where `concept id` = " + (p+1);
                stmt2 = con.createStatement();
                rs2 = stmt2.executeQuery(SQL2);
                rs2.next();
                Cname[cnt] = new JLabel(rs2.getString("concept name"));
                Cscore[cnt] = new JLabel(rs.getString(scoreName[p]));

                performancePanel.add(Cname[cnt]);
                performancePanel.add(Cscore[cnt]);
                Cname[cnt].setSize(600,20);
                Cscore[cnt].setSize(50,20);
                Cname[cnt].setBorder(null);
                Cscore[cnt].setBorder(null);
                Cname[cnt].setLocation(locx, locy);
                Cscore[cnt].setLocation(locx + 650, locy);

                locy += 26;
                cnt++;
            }
        }
        
        if((labelCount*26>255)){
                height = labelCount*26;
                Dimension scoreSize = new Dimension(870,255 + 110);   // 260 for 10 labels on the screen
                Dimension panelSize = new Dimension(845,height);
                Dimension scrollSize = new Dimension(865,255);
                scorePanel.setPreferredSize(scoreSize);
                scorePanel.setMinimumSize(scoreSize);
                performancePanel.setPreferredSize(panelSize);
                performancePanel.setMinimumSize(panelSize);
                conceptPane.setPreferredSize(scrollSize);
                conceptPane.setMinimumSize(scrollSize);
                conceptPane.setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_ALWAYS);
            }
            else{
                height = 26*labelCount;
                Dimension scoreSize = new Dimension(870,(height + 83));
                Dimension panelSize = new Dimension(845,(height));
                Dimension scrollSize = new Dimension(865,height);
                scorePanel.setPreferredSize(scoreSize);
                scorePanel.setMinimumSize(scoreSize);
                performancePanel.setPreferredSize(panelSize);
                performancePanel.setMinimumSize(panelSize);
                conceptPane.setPreferredSize(scrollSize);
                conceptPane.setMinimumSize(scrollSize);
                conceptPane.setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_NEVER);
                conceptPane.setHorizontalScrollBarPolicy(HORIZONTAL_SCROLLBAR_NEVER);
            }
                
        datejLabel.setText(rs.getString("date"));
        timejLabel.setText(rs.getString("time"));
        coursejLabel.setText(courseComboBox.getSelectedItem().toString());
        
        AVGjLabel.setText(rs.getString("totalScore"));
        numQ.setText(rset.getString("totalQuestions"));
        attemptedjLabel.setText(rset.getString("attemptedQues"));
        correctjLabel.setText(rset.getString("correctQues"));
        incorrectjLabel.setText(rset.getString("incorrectQues"));
    }
    
    private void courseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseComboBoxActionPerformed
        totalResult = 4;
        courseComboBox.removeItem("");
        if(courseComboBox.getSelectedItem().toString().equalsIgnoreCase("")){
           details.setVisible(false);
           stats.setVisible(false);
           scorePanel.setVisible(false);
           title.setVisible(false);
           old.setVisible(false);
           next.setVisible(false);
           SaveResult.setVisible(false);
        }
        else if(courseComboBox.getSelectedItem().toString().equalsIgnoreCase("JAVA")){
            course = "java";
            get_total_concepts();
            coursejLabel.setText(course);
            getStudResult(studID);
        }
        else if(courseComboBox.getSelectedItem().toString().equalsIgnoreCase("C++")){
            course = "cpp";
            get_total_concepts();
            coursejLabel.setText(course);
            getStudResult(studID);
        }
        else if(courseComboBox.getSelectedItem().toString().equalsIgnoreCase("C")){
            course = "clang";
            get_total_concepts();
            coursejLabel.setText(course);
            getStudResult(studID);
        }
        else if(courseComboBox.getSelectedItem().toString().equalsIgnoreCase("php")){
            course = "php";
            get_total_concepts();
            coursejLabel.setText(course);
            getStudResult(studID);
        }
        else if(courseComboBox.getSelectedItem().toString().equalsIgnoreCase("ASP .NET")){
            course = "dotnet";
            get_total_concepts();
            coursejLabel.setText(course);
            getStudResult(studID);
        }
    }//GEN-LAST:event_courseComboBoxActionPerformed

    private void oldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldActionPerformed
        if(!next.isEnabled())
            next.setEnabled(true);
        
        try {
            if(rs.previous()){
                performancePanel.removeAll();
                setAllLabels(rs);
            }
            else 
                old.setEnabled(false);
        } catch (SQLException ex) {
            Logger.getLogger(score.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(!(totalResult>1))
            old.setEnabled(false);
        totalResult--;
    }//GEN-LAST:event_oldActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        if(!old.isEnabled())
            old.setEnabled(true);
        try {
            rs.next();
            performancePanel.removeAll();
            setAllLabels(rs);
        } catch (SQLException ex) {
            JOptionPane.showInternalMessageDialog(null,ex.getMessage());
            Logger.getLogger(score.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(!(totalResult<3))
            next.setEnabled(false);
        totalResult++;
    }//GEN-LAST:event_nextActionPerformed

    private void oldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            old.doClick();
    }//GEN-LAST:event_oldKeyPressed

    private void nextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nextKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            next.doClick();
        else if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)
            old.doClick();
    }//GEN-LAST:event_nextKeyPressed

    private void SaveResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveResultActionPerformed

        Document doc = new Document(PageSize.A4);
        doc.addAuthor("NIIT");
        doc.addTitle("Student Score Card");
        Paragraph p = new Paragraph();
        Paragraph p1 = new Paragraph();
        Paragraph p2 = new Paragraph();
        Paragraph p3 = new Paragraph();
        
        String fnm = studIdjLabel.getText();
        Font bold = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
        try{
            int conceptRec = (labelCount*15 + 120), fileCount = 1;
            File scoreCard;
            String FileName;
            
            while(true){
                FileName= course+" result id "+ fnm + "_" +fileCount+ ".pdf";
           String path = System.getProperty("user.home")+"\\Desktop\\"+FileName;
                scoreCard = new File(path);
                if(scoreCard.exists())
                    fileCount++;
                else
                    break;
            }
            
            PdfWriter pdf = PdfWriter.getInstance(doc, new FileOutputStream(scoreCard));
            doc.open();
            PdfContentByte canvas = pdf.getDirectContentUnder();
            Rectangle rect = new Rectangle(20,695,575,765);    //X,Y,WIDHT,HEIGHT
            Rectangle rect1 = new Rectangle(20,615,575,685);
            Rectangle rect2 = new Rectangle(20,(854-(conceptRec+235)),575,605);   //235 is the height used in the upperportion s

            BaseColor bColor = new BaseColor(0x99, 0xff, 0x00);
            rect.setBackgroundColor(bColor);
            rect.setBorder(Rectangle.BOX);
            rect.setBorderWidth(1);
            canvas.rectangle(rect);
            
            BaseColor bColor1 = new BaseColor(0x00, 0x99, 0xCC);
            rect1.setBackgroundColor(bColor1);
            rect1.setBorder(Rectangle.BOX);
            rect1.setBorderWidth(1);
            canvas.rectangle(rect1);
            
            BaseColor bColor2 = new BaseColor(0xff, 0xff, 0xbd);
            rect2.setBackgroundColor(bColor2);
            rect2.setBorder(Rectangle.BOX);
            rect2.setBorderWidth(1);
            canvas.rectangle(rect2);

             Image image1 = Image.getInstance(System.getProperty("user.home")+"\\Documents\\NetBeansProjects\\Niit\\src\\NIIT\\stud\\icon\\NIIT.png");
           image1.setAbsolutePosition(16,790);
          image1.scalePercent(12,12);
        doc.add(image1);
        
        Image image2 = Image.getInstance(System.getProperty("user.home")+"\\Documents\\NetBeansProjects\\Niit\\src\\NIIT\\stud\\icon\\test-512 small.png");
           image2.setAbsolutePosition(180,770);
          image2.scalePercent(70,70);
          doc.add(image2);


            Phrase head = new Phrase("\n STUDENT RESULT ",bold);
            p.setAlignment(Element.ALIGN_CENTER);
            p.add(head);
            doc.add(p);
            
            p1.setTabSettings(new TabSettings(300f));
            p1.add("\nName   : " + studNamejLabel.getText());
            p1.add(Chunk.TABBING);
            p1.add("Date        : " + datejLabel.getText());
            p1.add("\n\n Student ID     : " + studIdjLabel.getText());
            p1.add(Chunk.TABBING);
            p1.add("Time        : " + timejLabel.getText());        
            doc.add(p1);

            p2.setTabSettings(new TabSettings(300f));
            p2.add("\n\n Total number of questions : " + numQ.getText());
            p2.add(Chunk.TABBING);
            p2.add("Correct questions        : " + correctjLabel.getText());
            p2.add("\n\n Questions attempted       : " + attemptedjLabel.getText());
            p2.add(Chunk.TABBING);
            p2.add("Incorrect questions      : " + incorrectjLabel.getText());
            doc.add(p2);
            
            p3.add("\n\n                         CONCEPT TESTED");
            p3.setTabSettings(new TabSettings(300f));
            p3.add(Chunk.TABBING);
            p3.add("           PERCENTAGE\n\n");
            for(int i=0; i<labelCount; i++){
                p3.add("                " +Cname[i].getText());
                p3.add(Chunk.TABBING);
                p3.add("                   " +Cscore[i].getText()+ "\n");
            }
            p3.add("\n");
            p3.add(Chunk.TABBING);
            p3.add("OVERALL : " + AVGjLabel.getText());
            doc.add(p3);

            JOptionPane.showInternalMessageDialog(this.getParent()," '"+FileName+"' "+" Successfully Saved to Desktop","Success",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception e){
            JOptionPane.showInternalMessageDialog(this.getParent(),e.getMessage());
        } doc.close();
    }//GEN-LAST:event_SaveResultActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AVGjLabel;
    private javax.swing.JLabel DOBjLabel;
    private javax.swing.JButton SaveResult;
    private javax.swing.JLabel attemptedjLabel;
    private javax.swing.JScrollPane conceptPane;
    private javax.swing.JLabel correctjLabel;
    private javax.swing.JComboBox<String> courseComboBox;
    private javax.swing.JLabel coursejLabel;
    private javax.swing.JLabel datejLabel;
    private javax.swing.JPanel details;
    private javax.swing.JPanel footerPanel;
    private javax.swing.JLabel incorrectjLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton next;
    private javax.swing.JLabel numQ;
    private javax.swing.JButton old;
    private javax.swing.JPanel performancePanel;
    private javax.swing.JPanel scorePanel;
    private javax.swing.JPanel selectionPanel;
    private javax.swing.JPanel stats;
    private javax.swing.JLabel studIdjLabel;
    private javax.swing.JLabel studNamejLabel;
    private javax.swing.JLabel timejLabel;
    private javax.swing.JPanel title;
    // End of variables declaration//GEN-END:variables
}
